# collection of rules used for Ericsson washing machine

help:: washing.help

washing.help:
	$(ECHO) "\n--- washing ---"
	$(ECHO) "washing-jenkins-parameters	: display parameters used in Ericsson jenkins job"
	$(ECHO) "washing-commit-parameters	: display parameters used in Ericsson prewash job"

washing-jenkins-parameters:
	$(ECHO) "At Ericsson intranet jenkins server (use TPC link for remote access) snr page, update as :"
	$(ECHO) "WRL_RCS_SNR_CO_ID : $(shell git rev-parse HEAD)"
	$(ECHO) "META_WR_RCS_LTTNG_CO_ID : $(shell git ls-remote git@github.com:DUSg2/meta-wr-rcs-lttng.git wrlinux | awk '{print $$1}')"
	$(ECHO) "META_INTEL_AXXIA_CO_ID : $(shell git ls-remote $(AXXIA_URL) $(AXXIA_REL) | awk '{print $$1}')"
	$(ECHO) "META_INTEL_AXXIA_RDK_CO_ID : $(shell git ls-remote $(AXXIA_RDK_URL) $(AXXIA_REL) | awk '{print $$1}')"
	$(ECHO) "RCS_KERNEL_CO_ID : $(shell cat layers/meta-prime-kernel/recipes-kernel/linux/linux-yocto-custom.bbappend | grep 'SRCREV =' | cut -d\" -f2)"

washing-commit-parameters:
	$(ECHO) "At prime-prewash repo, git@gitlab.com:eprime/shared/prime-prewash.git; update prewash-trigger.job as :"
	$(ECHO) "RCS_KERNEL $(shell cat layers/meta-prime-kernel/recipes-kernel/linux/linux-yocto-custom.bbappend | grep 'SRCREV =' | cut -d\" -f2)"
	$(ECHO) "WRL_RCS_SNR $(shell git rev-parse HEAD)"
	$(ECHO) "META_WR_RCS_LTTNG $(shell git ls-remote git@github.com:DUSg2/meta-wr-rcs-lttng.git wrlinux | awk '{print $$1}')"
	$(ECHO) "INTEL_AXXIA $(AXXIA_REL)"

$(TOP)/build/prime-prewash/prewash-trigger.job:
	$(GIT) -C $(TOP)/build clone git@gitlab.com:eprime/shared/prime-prewash.git
	$(GIT) -C $(TOP)/build/prime-prewash checkout G3-rcs-snr

washing-run: $(TOP)/build/prime-prewash/prewash-trigger.job
	$(GIT) -C $(TOP)/build/prime-prewash pull origin G3-rcs-snr
	$(SED) -i 's/^RCS_KERNEL.*/RCS_KERNEL $(shell cat layers/meta-prime-kernel/recipes-kernel/linux/linux-yocto-custom.bbappend | grep 'SRCREV =' | cut -d\" -f2)/g' $(TOP)/build/prime-prewash/prewash-trigger.job
	$(SED) -i 's/^WRL_RCS_SNR.*/WRL_RCS_SNR $(shell git rev-parse HEAD)/g' $(TOP)/build/prime-prewash/prewash-trigger.job
	$(SED) -i 's/^META_WR_RCS_LTTNG.*/META_WR_RCS_LTTNG $(shell git ls-remote git@github.com:DUSg2/meta-wr-rcs-lttng.git wrlinux | awk '{print $$1}')/g' $(TOP)/build/prime-prewash/prewash-trigger.job
	$(SED) -i 's/^INTEL_AXXIA.*/INTEL_AXXIA $(AXXIA_REL)/g' $(TOP)/build/prime-prewash/prewash-trigger.job
	$(GIT) -C $(TOP)/build/prime-prewash add prewash-trigger.job
	$(GIT) -C $(TOP)/build/prime-prewash commit -m "autogenerated washing commit"
	$(Q)# gate our washing attempt to be done after next Eri git mirror update
	$(Q)while [ $$(echo $$(date +%s)-$$(git show --no-patch --no-notes --pretty='%at' $$(git rev-parse HEAD)) | bc) -lt 1860 ]; do \
		echo "Waiting for customer internal repo mirror updates, at some more $$(echo 1860-$$(echo $$(date +%s)-$$(git show --no-patch --no-notes --pretty='%at' $$(git rev-parse HEAD)) | bc) | bc) seconds" ; \
		sleep 10 ; \
	done
	$(Q)# now it should be safe to trigger a washing attempt
	$(GIT) -C $(TOP)/build/prime-prewash push
